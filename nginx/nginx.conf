user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name xyai.xin www.xyai.xin api.xyai.xin;
        return 301 https://$host$request_uri;  # 永久重定向到 HTTPS
    }

    # HTTPS configuration for xyai.xin and www.xyai.xin
    server {
        listen 443 ssl;
        server_name xyai.xin www.xyai.xin;

        ssl_certificate /etc/nginx/certs/xyai.xin.pem;
        ssl_certificate_key /etc/nginx/certs/xyai.xin.key;

        # Serve frontend static files
        location / {
            proxy_pass http://frontend:80;  # 转发到 frontend 容器
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # HTTPS configuration for api.xyai.xin
    server {
        listen 443 ssl;
        server_name api.xyai.xin;

        ssl_certificate /etc/nginx/certs/xyai.xin.pem;
        ssl_certificate_key /etc/nginx/certs/xyai.xin.key;

        # Proxy API requests to backend
        location / {
            proxy_pass http://backend:8000;  # 转发到 backend 容器
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: Add CORS headers
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type";
        }
    }
}
